{"version":3,"file":"static/js/304.c845981b.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/moviesService.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  padding: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n`;\n\nexport const ListItem = styled.li`\n  background: white;\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border-radius: 5px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n  }\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 250px;\n  width: 100%;\n  display: block;\n`;\n\nexport const ItemTitle = styled.div`\n  color: black;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, ListItem, ItemLink, Img, ItemTitle } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title, poster }) => (\n        <ListItem key={id}>\n          <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n            <Img src={poster} alt={title} />\n            <ItemTitle>\n              <h3>{title}</h3>\n            </ItemTitle>\n          </ItemLink>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(Object).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const HomeTitle = styled.h1`\n  font-weight: 700;\n  color: black;\n  margin: 30px, 0;\n  text-decoration: none;\n`;\n","import { HomeContainer, HomeTitle } from './Home.styled';\nimport { useState, useEffect } from 'react';\nimport { getTrendingMovies } from '../../services/moviesService';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies().then(r => setMovies(r));\n  }, []);\n\n  return (\n    <main>\n      <HomeContainer>\n        <HomeTitle>Trending today</HomeTitle>\n        {movies?.length > 0 && <MoviesList movies={movies} />}\n      </HomeContainer>\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '3146fac2a7dcce2e95e0f76d4221aa50',\n  include_adult: false,\n};\nconst nullImage =\n  'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg';\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrendingMovies = async () => {\n  return axios\n    .get(`/trending/all/day`)\n    .then(r =>\n      r.data.results.map(({ id, title, poster_path }) => ({\n        id,\n        title,\n        poster: `${IMAGE_URL}${poster_path}`,\n      }))\n    )\n    .catch(error => {\n      Notify.failure(error.message);\n    });\n};\n\nexport const getMoviesByName = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(r =>\n      r.data.results.map(({ id, title, poster_path }) => ({\n        id,\n        title,\n        poster: poster_path ? `${IMAGE_URL}${poster_path}` : nullImage,\n      }))\n    )\n    .catch(error => {\n      Notify.failure(error.message);\n    });\n};\n\nexport const getMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: poster ? `${IMAGE_URL}${poster}` : nullImage,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      Notify.failure(error.message);\n    });\n};\n\nexport const getMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? `${IMAGE_URL}${photo}` : nullImage,\n      }))\n    )\n    .catch(error => {\n      Notify.failure(error.message);\n    });\n};\n\nexport const getMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      Notify.failure(error.message);\n    });\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","ItemLink","Link","_templateObject3","Img","_templateObject4","ItemTitle","_templateObject5","MoviesList","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","title","poster","_jsxs","to","concat","state","from","src","alt","HomeContainer","HomeTitle","_useState","useState","_useState2","_slicedToArray","setMovies","useEffect","getTrendingMovies","then","r","length","axios","api_key","include_adult","nullImage","IMAGE_URL","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","data","results","poster_path","catch","error","Notify","message","stop","apply","arguments","getMoviesByName","_ref3","_callee2","query","_context2","_ref4","_x","getMovieDetails","movieId","_ref5","_ref5$data","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","getMovieCredits","_ref6","cast","_ref7","name","character","photo","profile_path","getMovieReviews","_ref8","_ref9","author","content"],"sourceRoot":""}