{"version":3,"file":"static/js/387.feab5220.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/moviesService.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px;\n  background-color: LightSkyBlue;\n  margin: 20px 0px 30px;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const CastItem = styled.li`\n  background: white;\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border-radius: 5px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n`;\n\nexport const CastImage = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\nexport const CastDescr = styled.div`\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n  color: black;\n`;\n\nexport const CastName = styled.h3`\n  margin: 0px;\n`;\n\nexport const CastCharacter = styled.p`\n  margin: 0px;\n`;\n","import { getMovieCredits } from '../../services/moviesService';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  CastContainer,\n  CastList,\n  CastItem,\n  CastImage,\n  CastDescr,\n  CastName,\n  CastCharacter,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams('movieId');\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    getMovieCredits(movieId).then(setCredits);\n  }, [movieId]);\n\n  return (\n    <CastContainer>\n      {credits.length > 0 && (\n        <CastList>\n          {credits.map(({ id, name, character, photo }) => {\n            return (\n              <CastItem key={id}>\n                <CastImage src={photo} alt={name} />\n                <CastDescr>\n                  <CastName>{name}</CastName>\n                  <CastCharacter>Character: {character}</CastCharacter>\n                </CastDescr>\n              </CastItem>\n            );\n          })}\n        </CastList>\n      )}\n    </CastContainer>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '3146fac2a7dcce2e95e0f76d4221aa50',\n  include_adult: false,\n};\nconst nullImage =\n  'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg';\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrendingMovies = async () => {\n  return axios\n    .get(`/trending/all/day`)\n    .then(r =>\n      r.data.results.map(({ id, title, poster_path }) => ({\n        id,\n        title,\n        poster: `${IMAGE_URL}${poster_path}`,\n      }))\n    )\n    .catch(error => {\n      Notify.failure(error.message);\n    });\n};\n\nexport const getMoviesByName = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(r =>\n      r.data.results.map(({ id, title, poster_path }) => ({\n        id,\n        title,\n        poster: poster_path ? `${IMAGE_URL}${poster_path}` : nullImage,\n      }))\n    )\n    .catch(error => {\n      Notify.failure(error.message);\n    });\n};\n\nexport const getMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: poster ? `${IMAGE_URL}${poster}` : nullImage,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      Notify.failure(error.message);\n    });\n};\n\nexport const getMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? `${IMAGE_URL}${photo}` : nullImage,\n      }))\n    )\n    .catch(error => {\n      Notify.failure(error.message);\n    });\n};\n\nexport const getMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      Notify.failure(error.message);\n    });\n};\n"],"names":["CastContainer","styled","_templateObject","_taggedTemplateLiteral","CastList","_templateObject2","CastItem","_templateObject3","CastImage","_templateObject4","CastDescr","_templateObject5","CastName","_templateObject6","CastCharacter","_templateObject7","movieId","useParams","_useState","useState","_useState2","_slicedToArray","credits","setCredits","useEffect","getMovieCredits","then","_jsx","children","length","map","_ref","id","name","character","photo","_jsxs","src","alt","axios","api_key","include_adult","nullImage","IMAGE_URL","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","r","data","results","_ref2","title","poster_path","poster","concat","catch","error","Notify","message","stop","apply","arguments","getMoviesByName","_ref3","_callee2","query","_context2","_ref4","_x","getMovieDetails","_ref5","_ref5$data","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","_ref6","cast","_ref7","profile_path","getMovieReviews","_ref8","_ref9","author","content"],"sourceRoot":""}