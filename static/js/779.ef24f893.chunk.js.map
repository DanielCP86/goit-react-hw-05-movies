{"version":3,"file":"static/js/779.ef24f893.chunk.js","mappings":"gPAEaA,EAAmBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8JAS7BC,EAAcH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4H,SCoBpC,EA1BgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,IAAU,WAAtBD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAM1B,OAJAI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBT,GAASU,KAAKH,EAChC,GAAG,CAACP,KAGFW,EAAAA,EAAAA,KAACjB,EAAgB,CAAAkB,SACdN,EAAQO,OAAS,GAChBF,EAAAA,EAAAA,KAACb,EAAW,CAAAc,SACTN,EAAQQ,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OACjCC,EAAAA,EAAAA,MAAA,MAAAP,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKK,KACLN,EAAAA,EAAAA,KAAA,KAAAC,SAAIM,MAFGF,EAGJ,OAITL,EAAAA,EAAAA,KAAA,KAAAC,SAAG,8CAIX,C,uMC1BAQ,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,mCACTC,eAAe,GAEjB,IAAMC,EACJ,+EACIC,EAAY,kCAELC,EAAiB,eAAAV,GAAAW,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SACxBZ,EAAAA,EAAAA,IACA,qBACJV,MAAK,SAAAuB,GAAC,OACLA,EAAEC,KAAKC,QAAQrB,KAAI,SAAAsB,GAAA,IAAGpB,EAAEoB,EAAFpB,GAAIqB,EAAKD,EAALC,MAAOC,EAAWF,EAAXE,YAAW,MAAQ,CAClDtB,GAAAA,EACAqB,MAAAA,EACAE,OAAO,GAADC,OAAKhB,GAASgB,OAAGF,GACxB,GAAE,IAEJG,OAAM,SAAAC,GACLC,EAAAA,OAAAA,QAAeD,EAAME,QACvB,KAAE,wBAAAf,EAAAgB,OAAA,GAAAjB,EAAA,KACL,kBAb6B,OAAAb,EAAA+B,MAAA,KAAAC,UAAA,KAejBC,EAAe,eAAAC,GAAAvB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAuB,EAAMC,GAAK,OAAAxB,IAAAA,MAAA,SAAAyB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAApB,OAAA,SACjCZ,EAAAA,EAAAA,IACA,uBAADoB,OAAwBW,IAC3BzC,MAAK,SAAAuB,GAAC,OACLA,EAAEC,KAAKC,QAAQrB,KAAI,SAAAuC,GAAA,IAAGrC,EAAEqC,EAAFrC,GAAIqB,EAAKgB,EAALhB,MAAOC,EAAWe,EAAXf,YAAW,MAAQ,CAClDtB,GAAAA,EACAqB,MAAAA,EACAE,OAAQD,EAAW,GAAAE,OAAMhB,GAASgB,OAAGF,GAAgBf,EACtD,GAAE,IAEJkB,OAAM,SAAAC,GACLC,EAAAA,OAAAA,QAAeD,EAAME,QACvB,KAAE,wBAAAQ,EAAAP,OAAA,GAAAK,EAAA,KACL,gBAb2BI,GAAA,OAAAL,EAAAH,MAAA,KAAAC,UAAA,KAefQ,EAAkB,SAAAvD,GAC7B,OAAOoB,EAAAA,EAAAA,IACA,UAADoB,OAAWxC,EAAO,MACrBU,MACC,SAAA8C,GAAA,IAAAC,EAAAD,EACEtB,KACElB,EAAEyC,EAAFzC,GACauB,EAAMkB,EAAnBnB,YACAD,EAAKoB,EAALpB,MACcqB,EAAWD,EAAzBE,aACcC,EAASH,EAAvBI,aACAC,EAAQL,EAARK,SACAC,EAAMN,EAANM,OAAM,MAEH,CACL/C,GAAAA,EACAuB,OAAQA,EAAM,GAAAC,OAAMhB,GAASgB,OAAGD,GAAWhB,EAC3Cc,MAAAA,EACAqB,YAAa,IAAIM,KAAKN,GAAaO,cACnCL,UAAWM,KAAKC,MAAkB,GAAZP,GACtBE,SAAAA,EACAC,OAAAA,EACD,IAEFtB,OAAM,SAAAC,GACLC,EAAAA,OAAAA,QAAeD,EAAME,QACvB,GACJ,EAEawB,EAAkB,SAAApE,GAC7B,OAAOoB,EAAAA,EAAAA,IACA,UAADoB,OAAWxC,EAAO,aACrBU,MAAK,SAAA2D,GAAe,OAAAA,EAAZnC,KAAQoC,KACVxD,KAAI,SAAAyD,GAAA,IAAGvD,EAAEuD,EAAFvD,GAAIwD,EAAID,EAAJC,KAAMC,EAASF,EAATE,UAAyBC,EAAKH,EAAnBI,aAAY,MAAe,CAC1D3D,GAAAA,EACAwD,KAAAA,EACAC,UAAAA,EACAC,MAAOA,EAAK,GAAAlC,OAAMhB,GAASgB,OAAGkC,GAAUnD,EACzC,GAAE,IAEJkB,OAAM,SAAAC,GACLC,EAAAA,OAAAA,QAAeD,EAAME,QACvB,GACJ,EAEanC,EAAkB,SAAAT,GAC7B,OAAOoB,EAAAA,EAAAA,IACA,UAADoB,OAAWxC,EAAO,aACrBU,MAAK,SAAAkE,GAAkB,OAAAA,EAAf1C,KAAQC,QACPrB,KAAI,SAAA+D,GAAsB,MAAQ,CACxC7D,GADe6D,EAAF7D,GAEbC,OAFuB4D,EAAN5D,OAGjBC,QAHgC2D,EAAP3D,QAI1B,GAAE,IAEJuB,OAAM,SAAAC,GACLC,EAAAA,OAAAA,QAAeD,EAAME,QACvB,GACJ,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/moviesService.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  display: flex;\n  padding: 30px;\n  background-color: LightSkyBlue;\n  margin: 20px 0px 30px;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ReviewsList = styled.ul`\n  list-style-type: none;\n  text-decoration: none;\n  margin-left: 0;\n  margin-top: 0px;\n  padding-left: 10px;\n`;\n","import { getMovieReviews } from '../../services/moviesService';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ReviewsContainer, ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams('movieId');\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <ReviewsContainer>\n      {reviews.length > 0 ? (\n        <ReviewsList>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ReviewsList>\n      ) : (\n        <p>We don`t have any reviews for this movie</p>\n      )}\n    </ReviewsContainer>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '3146fac2a7dcce2e95e0f76d4221aa50',\n  include_adult: false,\n};\nconst nullImage =\n  'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg';\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrendingMovies = async () => {\n  return axios\n    .get(`/trending/all/day`)\n    .then(r =>\n      r.data.results.map(({ id, title, poster_path }) => ({\n        id,\n        title,\n        poster: `${IMAGE_URL}${poster_path}`,\n      }))\n    )\n    .catch(error => {\n      Notify.failure(error.message);\n    });\n};\n\nexport const getMoviesByName = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(r =>\n      r.data.results.map(({ id, title, poster_path }) => ({\n        id,\n        title,\n        poster: poster_path ? `${IMAGE_URL}${poster_path}` : nullImage,\n      }))\n    )\n    .catch(error => {\n      Notify.failure(error.message);\n    });\n};\n\nexport const getMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: poster ? `${IMAGE_URL}${poster}` : nullImage,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      Notify.failure(error.message);\n    });\n};\n\nexport const getMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? `${IMAGE_URL}${photo}` : nullImage,\n      }))\n    )\n    .catch(error => {\n      Notify.failure(error.message);\n    });\n};\n\nexport const getMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      Notify.failure(error.message);\n    });\n};\n"],"names":["ReviewsContainer","styled","_templateObject","_taggedTemplateLiteral","ReviewsList","_templateObject2","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","getMovieReviews","then","_jsx","children","length","map","_ref","id","author","content","_jsxs","axios","api_key","include_adult","nullImage","IMAGE_URL","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","r","data","results","_ref2","title","poster_path","poster","concat","catch","error","Notify","message","stop","apply","arguments","getMoviesByName","_ref3","_callee2","query","_context2","_ref4","_x","getMovieDetails","_ref5","_ref5$data","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","getMovieCredits","_ref6","cast","_ref7","name","character","photo","profile_path","_ref8","_ref9"],"sourceRoot":""}